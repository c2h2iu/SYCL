//
// Generated by LLVM NVPTX Back-End
//

.version 3.2
.target sm_20, texmode_independent
.address_size 64

	// .globl	SYCL_class_sycl_reduction_int_ // -- Begin function SYCL_class_sycl_reduction_int_
                                        // @SYCL_class_sycl_reduction_int_
.entry SYCL_class_sycl_reduction_int_(
	.param .u64 .ptr .global .align 4 SYCL_class_sycl_reduction_int__param_0,
	.param .u64 .ptr .shared .align 4 SYCL_class_sycl_reduction_int__param_1,
	.param .u64 SYCL_class_sycl_reduction_int__param_2,
	.param .u64 SYCL_class_sycl_reduction_int__param_3
)
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<21>;

// %bb.0:
	ld.param.u64 	%rd13, [SYCL_class_sycl_reduction_int__param_3];
	ld.param.u64 	%rd11, [SYCL_class_sycl_reduction_int__param_1];
	ld.param.u64 	%rd10, [SYCL_class_sycl_reduction_int__param_0];
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r5, %r3, %r2, %r4;
	cvt.u64.u32 	%rd14, %r5;
	setp.ge.u64 	%p3, %rd14, %rd13;
	mul.wide.u32 	%rd15, %r4, 4;
	add.s64 	%rd3, %rd11, %rd15;
	mov.pred 	%p9, 0;
	@%p3 bra 	LBB0_2;
// %bb.1:
	mul.wide.u32 	%rd16, %r5, 4;
	add.s64 	%rd4, %rd10, %rd16;
	ld.global.u32 	%r6, [%rd4];
	st.shared.u32 	[%rd3], %r6;
	mov.pred 	%p9, -1;
LBB0_2:
	bar.sync 	0;
	@!%p9 bra 	LBB0_10;
	bra.uni 	LBB0_3;
LBB0_3:
	ld.param.u64 	%rd12, [SYCL_class_sycl_reduction_int__param_2];
	cvt.u64.u32 	%rd1, %r4;
	min.u64 	%rd17, %rd13, %rd12;
	cvt.u32.u64 	%r1, %rd17;
	add.s32 	%r7, %r1, 1;
	setp.lt.u32 	%p5, %r7, 3;
	@%p5 bra 	LBB0_8;
// %bb.4:
	shr.u32 	%r8, %r1, 31;
	add.s32 	%r9, %r1, %r8;
	shr.s32 	%r10, %r9, 1;
	cvt.s64.s32 	%rd20, %r10;
LBB0_5:                                 // =>This Inner Loop Header: Depth=1
	setp.le.u64 	%p6, %rd20, %rd1;
	@%p6 bra 	LBB0_7;
// %bb.6:                               //   in Loop: Header=BB0_5 Depth=1
	shl.b64 	%rd18, %rd20, 2;
	add.s64 	%rd8, %rd3, %rd18;
	ld.shared.u32 	%r11, [%rd8];
	ld.shared.u32 	%r12, [%rd3];
	add.s32 	%r13, %r12, %r11;
	st.shared.u32 	[%rd3], %r13;
LBB0_7:                                 //   in Loop: Header=BB0_5 Depth=1
	bar.sync 	0;
	shr.u64 	%rd20, %rd20, 1;
	setp.eq.s64 	%p7, %rd20, 0;
	@%p7 bra 	LBB0_8;
	bra.uni 	LBB0_5;
LBB0_8:
	cvt.u32.u64 	%r14, %rd1;
	setp.eq.s32 	%p8, %r14, 0;
	@%p8 bra 	LBB0_9;
	bra.uni 	LBB0_10;
LBB0_9:
	cvt.u64.u32 	%rd2, %r2;
	shl.b64 	%rd19, %rd2, 2;
	add.s64 	%rd6, %rd10, %rd19;
	ld.shared.u32 	%r15, [%rd11];
	st.global.u32 	[%rd6], %r15;
LBB0_10:
	ret;
                                        // -- End function
}

